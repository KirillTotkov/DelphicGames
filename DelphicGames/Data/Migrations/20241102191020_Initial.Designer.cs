// <auto-generated />
using System;
using DelphicGames.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DelphicGames.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20241102191020_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DelphicGames.Data.Models.Camera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CityId")
                        .HasColumnType("integer")
                        .HasColumnName("city_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("NominationId")
                        .HasColumnType("integer")
                        .HasColumnName("nomination_id");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_cameras");

                    b.HasIndex("CityId")
                        .HasDatabaseName("ix_cameras_city_id");

                    b.HasIndex("NominationId")
                        .HasDatabaseName("ix_cameras_nomination_id");

                    b.ToTable("cameras", (string)null);
                });

            modelBuilder.Entity("DelphicGames.Data.Models.CameraPlatforms", b =>
                {
                    b.Property<int>("CameraId")
                        .HasColumnType("integer")
                        .HasColumnName("camera_id");

                    b.Property<int>("PlatformId")
                        .HasColumnType("integer")
                        .HasColumnName("platform_id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("token");

                    b.HasKey("CameraId", "PlatformId")
                        .HasName("pk_camera_platforms");

                    b.HasIndex("PlatformId")
                        .HasDatabaseName("ix_camera_platforms_platform_id");

                    b.ToTable("camera_platforms", (string)null);
                });

            modelBuilder.Entity("DelphicGames.Data.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("RegionId")
                        .HasColumnType("integer")
                        .HasColumnName("region_id");

                    b.HasKey("Id")
                        .HasName("pk_cities");

                    b.HasIndex("RegionId")
                        .HasDatabaseName("ix_cities_region_id");

                    b.ToTable("cities", (string)null);
                });

            modelBuilder.Entity("DelphicGames.Data.Models.Nomination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_nominations");

                    b.ToTable("nominations", (string)null);
                });

            modelBuilder.Entity("DelphicGames.Data.Models.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_platforms");

                    b.ToTable("platforms", (string)null);
                });

            modelBuilder.Entity("DelphicGames.Data.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_regions");

                    b.ToTable("regions", (string)null);
                });

            modelBuilder.Entity("DelphicGames.Data.Models.Camera", b =>
                {
                    b.HasOne("DelphicGames.Data.Models.City", null)
                        .WithMany("Cameras")
                        .HasForeignKey("CityId")
                        .HasConstraintName("fk_cameras_cities_city_id");

                    b.HasOne("DelphicGames.Data.Models.Nomination", "Nomination")
                        .WithMany("Cameras")
                        .HasForeignKey("NominationId")
                        .HasConstraintName("fk_cameras_nominations_nomination_id");

                    b.Navigation("Nomination");
                });

            modelBuilder.Entity("DelphicGames.Data.Models.CameraPlatforms", b =>
                {
                    b.HasOne("DelphicGames.Data.Models.Camera", "Camera")
                        .WithMany("CameraPlatforms")
                        .HasForeignKey("CameraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_camera_platforms_cameras_camera_id");

                    b.HasOne("DelphicGames.Data.Models.Platform", "Platform")
                        .WithMany("CameraPlatforms")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_camera_platforms_platforms_platform_id");

                    b.Navigation("Camera");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("DelphicGames.Data.Models.City", b =>
                {
                    b.HasOne("DelphicGames.Data.Models.Region", "Region")
                        .WithMany("Cities")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cities_regions_region_id");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("DelphicGames.Data.Models.Camera", b =>
                {
                    b.Navigation("CameraPlatforms");
                });

            modelBuilder.Entity("DelphicGames.Data.Models.City", b =>
                {
                    b.Navigation("Cameras");
                });

            modelBuilder.Entity("DelphicGames.Data.Models.Nomination", b =>
                {
                    b.Navigation("Cameras");
                });

            modelBuilder.Entity("DelphicGames.Data.Models.Platform", b =>
                {
                    b.Navigation("CameraPlatforms");
                });

            modelBuilder.Entity("DelphicGames.Data.Models.Region", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
