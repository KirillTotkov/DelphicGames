@using DelphicGames.Data.Models
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav mx-auto" style="box-shadow: none;">
    @if (SignInManager.IsSignedIn(User))
    {
        @if (User.IsInRole(nameof(UserRoles.Root)) || User.IsInRole(nameof(UserRoles.Specialist)) || User.IsInRole(nameof(UserRoles.Admin)))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-page="/Cameras">Камеры</a>
            </li>
        }

        @if (User.IsInRole(nameof(UserRoles.Root)) || User.IsInRole(nameof(UserRoles.Admin)))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-page="/Nominations">Сбор</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-page="/Streams">Трансляции</a>
            </li>
        }

        @if (User.IsInRole(nameof(UserRoles.Root)))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-page="/Root/Users/Index">Пользователи</a>
            </li>
        }

        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-page="/Account/Logout"
                  asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Выход</button>
            </form>
        </li>

        <li class="nav-item">
            <span class="nav-link text-dark">
                @UserManager.GetUserName(User)
            </span>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-page="/Account/Register">Регистрация</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-page="/Account/Login">Вход</a>
        </li>
    }
</ul>